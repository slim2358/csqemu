Below is the brief explanation of COSIM-QEMU flow:

1. Loads QEMU.so shared library.
2. Collects all necessary arguments for QEMU.
3. Determines two QEMU entry points (DLSYM):
  
        MAIN
        QEMU_step
        QEMU_pass_sync

4.  <QEMU_pass_sync> EP delivers mutex/condvar to QEMU. Mutex/condvar are used to synchronize
    COSIM and QEMU.
 
5.  <QEMU_step> is called by COSIM. Upon this QEMU wakes up CPU thread to execute a single instruction
    <QEMU_step> hangs on COND_WAIT waiting for QEMU to be  waken up. 
6.  Upon execution of a single instruction  QEMU CPU thead hangs up on COND_WAIT. 
    QEMU thread notifies COSIM.  <QEMU_step> is called again... 

    TBD

1. The current framework is very slow - two many COND_WAIT's.
   To try to improve performance.

 
